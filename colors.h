#pragma once

#include "public/mygl.h"
#include <map>

namespace mygl
{

static const MyGL_ColorFormat colorFormats[] = {
    { "GL_R8", GL_R8, GL_RED, 8, 0, 0, 0 },
    { "GL_R8_SNORM", GL_R8_SNORM, GL_RED, 8, 0, 0, 0 },
    { "GL_R16", GL_R16, GL_RED, 16, 0, 0, 0 },
    { "GL_R16_SNORM", GL_R16_SNORM, GL_RED, 16, 0, 0, 0 },
    { "GL_RG8", GL_RG8, GL_RG, 8, 8, 0, 0 },
    { "GL_RG8_SNORM", GL_RG8_SNORM, GL_RG, 8, 8, 0, 0 },
    { "GL_RG16", GL_RG16, GL_RG, 16, 16, 0, 0 },
    { "GL_RG16_SNORM", GL_RG16_SNORM, GL_RG, 16, 16, 0, 0 },
    { "GL_R3_G3_B2", GL_R3_G3_B2, GL_RGB, 3, 3, 2, 0 },
    { "GL_RGB4", GL_RGB4, GL_RGB, 4, 4, 4, 0 },
    { "GL_RGB5", GL_RGB5, GL_RGB, 5, 5, 5, 0 },
    { "GL_RGB8", GL_RGB8, GL_RGB, 8, 8, 8, 0 },
    { "GL_RGB8_SNORM", GL_RGB8_SNORM, GL_RGB, 8, 8, 8, 0 },
    { "GL_RGB10", GL_RGB10, GL_RGB, 10, 10, 10, 0 },
    { "GL_RGB12", GL_RGB12, GL_RGB, 12, 12, 12, 0 },
    { "GL_RGB16_SNORM", GL_RGB16_SNORM, GL_RGB, 16, 16, 16, 0 },
    { "GL_RGBA2", GL_RGBA2, GL_RGB, 2, 2, 2, 2 },
    { "GL_RGBA4", GL_RGBA4, GL_RGB, 4, 4, 4, 4 },
    { "GL_RGB5_A1", GL_RGB5_A1, GL_RGBA, 5, 5, 5, 1 },
    { "GL_RGBA8", GL_RGBA8, GL_RGBA, 8, 8, 8, 8 },
    { "GL_RGBA8_SNORM", GL_RGBA8_SNORM, GL_RGBA, 8, 8, 8, 8 },
    { "GL_RGB10_A2", GL_RGB10_A2, GL_RGBA, 10, 10, 10, 2 },
    { "GL_RGB10_A2UI", GL_RGB10_A2UI, GL_RGBA, 10, 10, 10, 2 },
    { "GL_RGBA12", GL_RGBA12, GL_RGBA, 12, 12, 12, 12 },
    { "GL_RGBA16", GL_RGBA16, GL_RGBA, 16, 16, 16, 16 },
    { "GL_SRGB8", GL_SRGB8, GL_RGB, 8, 8, 8, 0 },
    { "GL_SRGB8_ALPHA8", GL_SRGB8_ALPHA8, GL_RGBA, 8, 8, 8, 8 },
    { "GL_R16F", GL_R16F, GL_RED, 16, 0, 0, 0 },
    { "GL_RG16F", GL_RG16F, GL_RG, 16, 16, 0, 0 },
    { "GL_RGB16F", GL_RGB16F, GL_RGB, 16, 16, 16, 0 },
    { "GL_RGBA16F", GL_RGBA16F, GL_RGBA, 16, 16, 16, 16 },
    { "GL_R32F", GL_R32F, GL_RED, 32, 0, 0, 0 },
    { "GL_RG32F", GL_RG32F, GL_RG, 32, 32, 0, 0 },
    { "GL_RGB32F", GL_RGB32F, GL_RGB, 32, 32, 32, 0 },
    { "GL_RGBA32F", GL_RGBA32F, GL_RGBA, 32, 32, 32, 32 },
    { "GL_R11F_G11F_B10F", GL_R11F_G11F_B10F, GL_RGB, 11, 11, 10, 0 },
    { "GL_RGB9_E5", GL_RGB9_E5, GL_RGB, 9, 9, 9, 5 },
    { "GL_R8I", GL_R8I, GL_RED, 8, 0, 0, 0 },
    { "GL_R8UI", GL_R8UI, GL_RED, 8, 0, 0, 0 },
    { "GL_R16I", GL_R16I, GL_RED, 16, 0, 0, 0 },
    { "GL_R16UI", GL_R16UI, GL_RED, 16, 0, 0, 0 },
    { "GL_R32I", GL_R32I, GL_RED, 32, 0, 0, 0 },
    { "GL_R32UI", GL_R32UI, GL_RED, 32, 0, 0, 0 },
    { "GL_RG8I", GL_RG8I, GL_RG, 8, 8, 0, 0 },
    { "GL_RG8UI", GL_RG8UI, GL_RG, 8, 8, 0, 0 },
    { "GL_RG16I", GL_RG16I, GL_RG, 16, 16, 0, 0 },
    { "GL_RG16UI", GL_RG16UI, GL_RG, 16, 16, 0, 0 },
    { "GL_RG32I", GL_RG32I, GL_RG, 32, 32, 0, 0 },
    { "GL_RG32UI", GL_RG32UI, GL_RG, 32, 32, 0, 0 },
    { "GL_RGB8I", GL_RGB8I, GL_RGB, 8, 8, 8, 0 },
    { "GL_RGB8UI", GL_RGB8UI, GL_RGB, 8, 8, 8, 0 },
    { "GL_RGB16I", GL_RGB16I, GL_RGB, 16, 16, 16, 0 },
    { "GL_RGB16UI", GL_RGB16UI, GL_RGB, 16, 16, 16, 0 },
    { "GL_RGB32I", GL_RGB32I, GL_RGB, 32, 32, 32, 0 },
    { "GL_RGB32UI", GL_RGB32UI, GL_RGB, 32, 32, 32, 0 },
    { "GL_RGBA8I", GL_RGBA8I, GL_RGBA, 8, 8, 8, 8 },
    { "GL_RGBA8UI", GL_RGBA8UI, GL_RGBA, 8, 8, 8, 8 },
    { "GL_RGBA16I", GL_RGBA16I, GL_RGBA, 16, 16, 16, 16 },
    { "GL_RGBA16UI", GL_RGBA16UI, GL_RGBA, 16, 16, 16, 16 },
    { "GL_RGBA32I", GL_RGBA32I, GL_RGBA, 32, 32, 32, 32 },
    { "GL_RGBA32UI", GL_RGBA32UI, GL_RGBA, 32, 32, 32, 32 },
};

const std::map<std::string, const MyGL_ColorFormat& > colorFormatByNames = {
    { "r8", colorFormats[0] },
    { "r8snorm", colorFormats[1] },
    { "r16", colorFormats[2] },
    { "r16snorm", colorFormats[3] },
    { "rg8", colorFormats[4] },
    { "rg8snorm", colorFormats[5] },
    { "rg16", colorFormats[6] },
    { "rg16snorm", colorFormats[7] },
    { "r3g3b2", colorFormats[8] },
    { "rgb4", colorFormats[9] },
    { "rgb5", colorFormats[10] },
    { "rgb8", colorFormats[11] },
    { "rgb8snorm", colorFormats[12] },
    { "rgb10", colorFormats[13] },
    { "rgb12", colorFormats[14] },
    { "rgb16snorm", colorFormats[15] },
    { "rgba2", colorFormats[16] },
    { "rgba4", colorFormats[17] },
    { "rgb5a1", colorFormats[18] },
    { "rgba8", colorFormats[19] },
    { "rgba8snorm", colorFormats[20] },
    { "rgb10a2", colorFormats[21] },
    { "rgb10a2ui", colorFormats[22] },
    { "rgba12", colorFormats[23] },
    { "rgba16", colorFormats[24] },
    { "srgb8", colorFormats[25] },
    { "srgb8alpha8", colorFormats[26] },
    { "r16f", colorFormats[27] },
    { "rg16f", colorFormats[28] },
    { "rgb16f", colorFormats[29] },
    { "rgba16f", colorFormats[30] },
    { "r32f", colorFormats[31] },
    { "rg32f", colorFormats[32] },
    { "rgb32f", colorFormats[33] },
    { "rgba32f", colorFormats[34] },
    { "r11fg11fb10f", colorFormats[35] },
    { "rgb9e5", colorFormats[36] },
    { "r8i", colorFormats[37] },
    { "r8ui", colorFormats[38] },
    { "r16i", colorFormats[39] },
    { "r16ui", colorFormats[40] },
    { "r32i", colorFormats[41] },
    { "r32ui", colorFormats[42] },
    { "rg8i", colorFormats[43] },
    { "rg8ui", colorFormats[44] },
    { "rg16i", colorFormats[45] },
    { "rg16ui", colorFormats[46] },
    { "rg32i", colorFormats[47] },
    { "rg32ui", colorFormats[48] },
    { "rgb8i", colorFormats[49] },
    { "rgb8ui", colorFormats[50] },
    { "rgb16i", colorFormats[51] },
    { "rgb16ui", colorFormats[52] },
    { "rgb32i", colorFormats[53] },
    { "rgb32ui", colorFormats[54] },
    { "rgba8i", colorFormats[55] },
    { "rgba8ui", colorFormats[56] },
    { "rgba16i", colorFormats[57] },
    { "rgba16ui", colorFormats[58] },
    { "rgba32i", colorFormats[59] },
    { "rgba32ui", colorFormats[60] },
};

const MyGL_ColorFormat& colorFormatByName( const char *name ){
  auto it = colorFormatByNames.find( name );
  return it != colorFormatByNames.end() ? it->second : colorFormats[11];
}

}
